- job-template:
    name: 'Component-Gate-Trigger_{repo_name}'
    project-type: pipeline
    concurrent: true
    triggers:
      - github-pull-request:
          org-list:
            - rcbops
          github-hooks: true
          trigger-phrase: 'trigger-component-gate'
          only-trigger-phrase: true
          auth-id: "github_account_rpc_jenkins_svc"
          status-context: 'CIT/gate'
          cancel-builds-on-update: true
    properties:
      - github:
          url: "{repo_url}"
      - build-discarder:
          days-to-keep: 30
    parameters:
      - rpc_gating_params
    dsl: |
      library "rpc-gating@${{RPC_GATING_BRANCH}}"
      common.globalWraps(){{
        List jobNames = Hudson.instance.getAllItems(org.jenkinsci.plugins.workflow.job.WorkflowJob)*.fullName

        def parallelBuilds = [:]

        // Cannot do for (job in jobNames), see:
        // https://jenkins.io/doc/pipeline/examples/#parallel-multiple-nodes
        for (j in jobNames) {{
          def job = j
          def m = job =~ /GATE_{repo_name}/
          if (m) {{
            parallelBuilds[job] = {{
              build(
                job: job,
                wait: true,
                parameters: [
                  [
                    $class: "StringParameterValue",
                    name: "pr_repo",
                    value: ghprbGhRepository,
                  ],
                  [
                    $class: "StringParameterValue",
                    name: "pr_number",
                    value: ghprbPullId,
                  ]
                ]
              )
            }} // parallelBuilds
          }} // if
        }} // for

        parallel parallelBuilds
      }} // globalWraps

- job-template:
    name: 'GATE_{repo_name}-{series}-{image}-{scenario}-{action}'
    series: "master"
    project-type: pipeline
    concurrent: true
    FLAVOR: "performance1-1"
    IMAGE: "Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)"
    BOOT_TIMEOUT: 900
    skip_pattern: ""
    properties:
      - build-discarder:
          num-to-keep: "30"
      - github:
          url: "{repo_url}"
      - inject:
          properties-content: |
            STAGES="Allocate Resources, Connect Slave, Cleanup, Destroy Slave"
            BOOT_TIMEOUT={BOOT_TIMEOUT}
            RE_JOB_NAME={name}
            RE_JOB_IMAGE={image}
            RE_JOB_SCENARIO={scenario}
            RE_JOB_ACTION={action}
            RE_JOB_FLAVOR={FLAVOR}
            RE_JOB_REPO_NAME={repo_name}
    parameters:
      - rpc_gating_params
      - instance_params:
          IMAGE: "{IMAGE}"
          FLAVOR: "{FLAVOR}"
          REGIONS: "{REGIONS}"
          FALLBACK_REGIONS: "{FALLBACK_REGIONS}"
      - standard_job_params:
          SLAVE_TYPE: "{SLAVE_TYPE}"
          SLAVE_CONTAINER_DOCKERFILE_REPO: "{SLAVE_CONTAINER_DOCKERFILE_REPO}"
          SLAVE_CONTAINER_DOCKERFILE_PATH: "{SLAVE_CONTAINER_DOCKERFILE_PATH}"
          SLAVE_CONTAINER_DOCKERFILE_BUILD_ARGS: "{SLAVE_CONTAINER_DOCKERFILE_BUILD_ARGS}"
      - validating-string:
          name: pr_repo
          regex: "[a-zA-Z0-9-]+/[a-zA-Z0-9._-]+"
          msg: "The release repository must be supplied."
      - validating-string:
          name: pr_number
          regex: "[0-9]+"
          msg: "The number of the pull request to merge is required."
      - string:
          name: skip_pattern
          default: "{skip_pattern}"
          description: |
            Python re compatible regex, with verbose flag enabled. If all files changed by the
            pull request match the regex the build will exit without running the test scripts.
            This is used to skip tests that are not relevant to a change, for example testing a
            deployment when only changing documentation. By default no builds are skipped.

    dsl: |
      library "rpc-gating@${{RPC_GATING_BRANCH}}"
      common.stdJob("gate", "{credentials}", "")
